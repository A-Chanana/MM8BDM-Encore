#library "ENCRACS"
#include "ZCommon.acs"
#include "ECADD.acs"

// [Bin] Scripts for things like Texture Replacement
Function Int define_TextureReplace(str texture, str textureReplace)
{
	If(MAX_TEXREPLACE_GLOBAL < MAX_TEXREPLACE_GLOBAL_LIMIT)
	{
		Int idx = MAX_TEXREPLACE_GLOBAL;
		Encore_TexRelpace[idx][0] = texture;
		Encore_TexRelpace[idx][1] = textureReplace;
		Encore_TexRelpace[idx][2] = 1;
		MAX_TEXREPLACE_GLOBAL++;
		Return idx;
	}
	PrintBold(s:"Texture Replace Limit too low");
	Return -1;
}

Script "encore_defineTexReplace_s" (void)
{
	int res = define_TextureReplace(
		GetCvarString("_encore_temp_texture"),
		GetCvarString("_encore_temp_textureReplace")
	);
	SetResultValue(res);
}
bool mapDefined = false;
function bool checkEncoreMap(str map_code) {
    int u = UniqueTID();
    if(!SpawnForced(StrParam(s:"EncoreTexReplace_", s:map_code), 0, 0, 0, u, 0)) {
        return false;
    }
    Thing_Remove(u);
    Return True;
}
script "encore_swaptextures" OPEN CLIENTSIDE {
	str map_code = StrParam(n:PRINTNAME_LEVEL);
	if(!checkEncoreMap(map_code)) Terminate;
	ACS_NamedExecuteWithResult(StrParam(s:"encore_texreplace_",s:map_code));
	int cpn = ConsolePlayerNumber();
	int newVal;
	int val = 0;
	while(true)
	{
		newVal = GetUserCvar(cpn,"enc_ogtextures");
		//if(newVal != val)
		//{
			if(newVal > 1) {
				SetUserCvar(cpn,"enc_ogtextures",1);
				val = 1;
			} else if (newVal < 0) {
				SetUserCvar(cpn,"enc_ogtextures",0);
				val = 0;
			} else {
				val = newVal;
			}
			updateTextures(val);
		//}
		Delay(1);
	}
}

function void updateTextures (bool which) {
	int replacee = !which;
	int replacer = which;
	for(int i = 0; i < MAX_TEXREPLACE_GLOBAL; i++) {
		if(Encore_TexRelpace[i][2]) {
			ReplaceTextures(Encore_TexRelpace[i][replacee],Encore_TexRelpace[i][replacer]);
		}
	}
}

// [Bin] small Grand Classes compatibility thing lol
#include "GCADD.acs"
Script "Encore_NutPickupSpawn" (Void) // to allow Dr. Wily in GC to use User2 on the pickups
{
    If(GCInPlay())
        GiveInventory("WilyGunItemSpawnFunc", 1);
}
